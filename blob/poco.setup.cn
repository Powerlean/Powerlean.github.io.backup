#!/bin/bash -e
export found="bash"
WHICH() {
for PROGRAM in "$found"; do
 RET=1
 IFS_SAVE="$IFS"
 IFS=:
 case $PROGRAM in
  */*)
   if [ -f "$PROGRAM" ] && [ -x "$PROGRAM" ]; then
    echo "$PROGRAM"
    RET=0
   fi
   ;;
  *)
   for ELEMENT in $PATH; do
    if [ -z "$ELEMENT" ]; then
     ELEMENT=.
    fi
    if [ -f "$ELEMENT/$PROGRAM" ] && [ -x "$ELEMENT/$PROGRAM" ]; then
     echo "$ELEMENT/$PROGRAM"
     RET=0
     [[ "$ALLMATCHES" -eq 1 ]] || break
    fi
   done
   ;;
 esac
 IFS="$IFS_SAVE"
 if [ "$RET" -ne 0 ]; then
  ALLRET=1
 fi
done
}
export bin=`WHICH | sed 's/bash//g'`
#特殊字符#
export yellow="\033[33m"
export red="\033[31m"
export green="\033[32m"
export done="\033[0m"
##进度条##
function progress {
  point="echo -e -n -"
  sec="0.45"
  loop=1
  echo -n " "
  while [[ $loop -lt 3 ]]; do
    sleep $sec
    $point
    loop=$(($loop+1))
done
  sleep $sec
  echo -en ">"
  echo -n " "
}
##进度条##
if [ not"$bin" == "not" ]; then
  echo -e "${red}变量未生效，请将此问题反馈至：https://github.com/Powerlean/Power-Collector/issues/new ${done}"
  exit 2
fi
#分区一
if [ "$mode" == "update" ]; then
  curl -sOL powerlean.github.io/blob/poco
  curl -sOL powerlean.github.io/blob/poco-rescue
  mv poco $bin
  mv poco-rescue $bin
  chmod +x $bin/poco
  chmod +x $bin/poco-rescue
  if [ ! -d "$PREFIX/etc/poco/" ]; then
    mkdir "$PREFIX/etc/poco/"
  fi
  if [ ! -f "$PREFIX/etc/poco/poco.conf" ]; then
     curl -sOL powerlean.github.io/blob/poco.conf
     mv poco.conf "$PREFIX/etc/poco"
  fi
  if [ ! -f "$PREFIX/etc/poco/poco.data" ]; then
     curl -sOL powerlean.github.io/blob/poco.data
     mv poco.conf "$PREFIX/etc/poco"
  fi
  exit 0
fi
#分区二
get_now_timestamp() {
      cur_sec_and_ns=`date '+%s-%N'`
        echo ${cur_sec_and_ns%-*}
}

end_now_timestamp() {
end=`get_now_timestamp`
second=`expr ${end} - ${begin}`
min=`expr ${second} / 1`
time="秒"

if [ "$min" -ge "20" ]; then
    des="速度较缓慢"
fi
if [ "$min" -ge "60" ]; then
     min=`expr ${second} / 60`
     time="分钟"
fi
echo "安装共耗时${min}${time}${des}"
}

if [ -f "$bin/poco" ]; then
  clear
  curl -sL powerlean.github.io/blob/poco.fav
   echo -ne "\033[33m\033[4m        https://powerlean.github.io/poco"
  echo ""
  echo ""
  echo -e "${green}该设备已存在某个版本的Power Collector，若要重新安装，请尝试将'${bin}poco'移除。       ${done}"
  exit 0
fi
begin=$(get_now_timestamp)
clear
curl -sL powerlean.github.io/blob/poco.fav
echo -e "\033[33m\033[4mhttps://powerlean.github.io/poco${done}"
sleep 3
echo -n "安装应该已经开始"
progress
clear

Wave_Anime(){
export cmd="$@"
Load_Anime() {
input="$@"

Progress() {
proc(){ sleep 0.05;printf '\e[15D';printf "\e[38;5;$2m";printf $1;: "${_:0-1:1}""${_:0:14}"; if [[ -f Poco_Progress_Done ]]; then rm "Poco_Progress_Done";exit 0; else proc $_ $[$2 + 1]; fi; }; printf '\e[?25l'; : echo  $(echo "4KLIDYUWQLRJNA7CS2COFFUF4KLINYUWQ7RJNCHCS2D6FFUG4KLILYUWQTRJNA7CS2BOFFUBBI======" | base32 -d);proc $_ 1
#code by nidhogg
}

Input() {
${input}
touch Poco_Progress_Done
}

Input >/dev/null 2>&1 | Progress
}

main() {
echo " 请耐心等待..."
echo ""
Load_Anime $cmd
for i in {0..4};
do
    echo -en "\b\b\b   \b\b\b"
done
echo " 完成！"
clear
}

main
}


Download(){
echo -e "${yellow}[1/6] ${done}下载主体" #别问我这个地方为什么写得这么弱智，我也不理解你们这群人为什么要把事情想得那么复杂
curl -#OL powerlean.github.io/blob/poco
clear
echo -e "${yellow}[2/6] ${done}下载控制组件"
curl -#OL powerlean.github.io/blob/poco.conf
clear
echo -e "${yellow}[3/6] ${done}下载修复程式"
curl -#OL powerlean.github.io/blob/poco-rescue
clear
echo -e "${yellow}[4/6] ${done}下载移除脚本"
curl -#OL powerlean.github.io/blob/poco-remove
clear
echo -e "${yellow}[5/6] ${done}更新数据缓存"
curl -#OL powerlean.github.io/blob/poco.data
clear
echo -e "${yellow}[6/6] ${done}载入初始指令集"
curl -#OL powerlean.github.io/blob/poco.init
clear
}

Wave_Anime Download

echo -n "设定中"
progress
if [ ! -d "$PREFIX/etc/poco/" ]; then
    mkdir -p "$PREFIX/etc/poco/"
fi
mv poco.conf "$PREFIX/etc/poco"
mv poco.init "$PREFIX/etc/poco"
mv poco $bin
mv poco-rescue $bin
mv poco-remove $bin
mv poco.data "$PREFIX/etc/poco"
chmod +x $bin/poco
chmod +x $bin/poco-rescue
chmod +x $bin/poco-remove
echo "完成"
if [ -f "$bin/sudo" ]; then
  if [ -f "$bin/su" ]; then
    echo -e ${yellow}"若无法安装，请手动运行'sudo su'以授权PowerCollector安装权限"${done}
  fi
fi
${set_env}
echo "Power Collector已就绪"
#######检验#########
echo -ne "\033[0m检查程序是否已正常安装"
progress
if [ $(which poco)  ]; then
echo -e "\033[32mpoco已正常安装在$(which poco)"
else
echo -e "${red}安装异常${done}"
fi
echo -en "\033[0m"
########检验#########
echo -e "运行${green}poco help${done}来取得帮助"
end_now_timestamp
sleep 4

